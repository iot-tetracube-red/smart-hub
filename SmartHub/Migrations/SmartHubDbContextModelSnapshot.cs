// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SmartHub.Data;

namespace SmartHub.Migrations
{
    [DbContext(typeof(SmartHubDbContext))]
    partial class SmartHubDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("SmartHub.Data.Entities.Action", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AlexaSlotId")
                        .HasColumnType("text");

                    b.Property<string>("CommandTopic")
                        .HasColumnType("text");

                    b.Property<Guid>("DeviceId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("QueryingTopic")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.ToTable("Actions");
                });

            modelBuilder.Entity("SmartHub.Data.Entities.Device", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AlexaSlotId")
                        .HasColumnType("text");

                    b.Property<string>("FeedbackTopic")
                        .HasColumnType("text");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("SmartHub.Data.Entities.Telemetry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("DeviceId")
                        .HasColumnType("uuid");

                    b.Property<string>("DeviceStatus")
                        .HasColumnType("jsonb");

                    b.Property<DateTime>("RevealedAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.ToTable("TelemetryData");
                });

            modelBuilder.Entity("SmartHub.Data.Entities.Action", b =>
                {
                    b.HasOne("SmartHub.Data.Entities.Device", "Device")
                        .WithMany("Actions")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");
                });

            modelBuilder.Entity("SmartHub.Data.Entities.Telemetry", b =>
                {
                    b.HasOne("SmartHub.Data.Entities.Device", "Device")
                        .WithMany("TelemetryData")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");
                });

            modelBuilder.Entity("SmartHub.Data.Entities.Device", b =>
                {
                    b.Navigation("Actions");

                    b.Navigation("TelemetryData");
                });
#pragma warning restore 612, 618
        }
    }
}
